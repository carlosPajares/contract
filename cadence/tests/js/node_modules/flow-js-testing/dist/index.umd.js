!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@onflow/fcl-config"),require("@onflow/config"),require("fs"),require("path"),require("@onflow/types"),require("@onflow/fcl"),require("flow-cadut"),require("elliptic"),require("sha3"),require("rlp")):"function"==typeof define&&define.amd?define(["exports","@onflow/fcl-config","@onflow/config","fs","path","@onflow/types","@onflow/fcl","flow-cadut","elliptic","sha3","rlp"],n):n((e||self).flowJsTesting={},e.fclConfig,e.config,e.fs,e.path,e.t,e.fcl,e.flowCadut,e.elliptic,e.sha3,e.rlp)}(this,function(e,n,r,t,o,s,c,a,i,u,l){function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function g(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach(function(r){if("default"!==r){var t=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(n,r,t.get?t:{enumerable:!0,get:function(){return e[r]}})}}),n.default=e,n}var f=d(t),m=d(o),p=g(s),h=g(c),P=g(l);const v=(e,n,r)=>{if("string"==typeof n)return v(e,n.split("/"),r);if(!n.length)return e;try{const[t,...o]=n;return v(e[t],o,r)}catch(e){return r}},M=(e,t,o,s)=>{let c=v(n.flowConfig(),o,s);c||(c=s),r.config().put(e,c)},A=e=>null==e?null:e.replace(/^0x/,""),y=e=>null==e?null:"0x"+A(e),b=new i.ec("p256"),w=(e,n)=>{const r=b.keyFromPrivate(Buffer.from(e,"hex")).sign((e=>{const n=new u.SHA3(256);return n.update(Buffer.from(e,"hex")),n.digest()})(n)),t=r.r.toArrayLike(Buffer,"be",32),o=r.s.toArrayLike(Buffer,"be",32);return Buffer.concat([t,o]).toString("hex")},S=(e,n=0)=>function(t={}){try{return Promise.resolve(r.config().get("SERVICE_ADDRESS")).then(function(o){return Promise.resolve(r.config().get("PRIVATE_KEY")).then(function(r){return e=A(e||o),{...t,tempId:`${e}-${n}`,addr:h.sansPrefix(e),keyId:n,signingFunction:function(t){try{return Promise.resolve({keyId:n,addr:y(e),signature:w(r,t.message)})}catch(e){return Promise.reject(e)}}}})})}catch(e){return Promise.reject(e)}},T=e=>"object"==typeof e&&null!==e,x=(e,n)=>{const r=e[e.length-1];return e.slice(0,-1).map(e=>n(e,r))},j=(e,n)=>{if(0===e.length)return[];const r=e[0];return Array.isArray(r)&&r[r.length-1].asArgument?(e=>e.reduce((e,n)=>[...e,...x(n,(e,n)=>h.arg(e,n))],[]))(e):a.mapValuesToCode(n,e)},k=e=>function(n){try{function r(){function e(){return Promise.resolve(le()).then(function(e){const r={...ye,...n,FlowManager:e};return t=Me(t,r),{code:t,signers:s,args:c}})}let n;const r=function(){if(!a)return Promise.resolve(Ae(t)).then(function(e){n=e});n=ye}();return r&&r.then?r.then(e):e()}let t,o,s,c,a;if(T(n[0])){const[e]=n,{name:r,code:i,args:u,signers:l,service:d=!1}=e;if(a=d,!r&&!i)throw Error("Both `name` and `code` are missing. Provide either of them");o=r,t=i,s=l,c=u}else"script"===e?[o,c]=n:[o,s,c]=n;const i=function(){if(o)return Promise.resolve(("script"===e?je:xe)({name:o})).then(function(e){t=e})}();return Promise.resolve(i&&i.then?i.then(r):r())}catch(e){return Promise.reject(e)}},E=function(){try{const e=arguments,n=k("tx");return Promise.resolve(n([].slice.call(e))).then(function({code:e,args:n,signers:r}){const t=S(),o=[h.transaction(e),h.payer(t),h.proposer(t),h.limit(999)];if(r){const e=r.map(e=>S(e));o.push(h.authorizations(e))}else o.push(h.authorizations([t]));return n&&o.push(h.args(j(n,e))),Promise.resolve(h.send(o)).then(function(e){return Promise.resolve(h.tx(e).onceExecuted())})})}catch(e){return Promise.reject(e)}},F=function(){try{const e=arguments,n=k("script");return Promise.resolve(n([].slice.call(e))).then(function({code:e,args:n}){const r=[h.script(e)];return n&&r.push(h.args(j(n,e))),Promise.resolve(h.send(r)).then(function(e){return h.decode(e)})})}catch(e){return Promise.reject(e)}},I="\n  import FlowManager from 0x01\n\ntransaction (_ name: String, pubKey: String, manager: Address) {\n    prepare( admin: AuthAccount) {\n        let newAccount = AuthAccount(payer:admin)\n        newAccount.addPublicKey(pubKey.decodeHex())\n\n        let linkPath = FlowManager.accountManagerPath\n        let accountManager = getAccount(manager)\n                            .getCapability(linkPath)!\n                            .borrow<&FlowManager.Mapper>()!\n        \n        // Create a record in account database\n        let address = newAccount.address\n        accountManager.setAddress(name, address: address)\n    }\n}\n \n",C=function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(I,r,"createAccount =>"),a.replaceImportAddresses(I,r)})}catch(e){return Promise.reject(e)}},R=function({addressMap:e={},args:n=[],signers:r=[]}){try{return Promise.resolve(C(e)).then(function(e){return a.reportMissing("arguments",n.length,3,R),a.reportMissing("signers",r.length,1,R),E({code:e,args:n,signers:r})})}catch(e){return Promise.reject(e)}},B="\n  import FlowManager from 0x01\n\ntransaction(name:String, code: String, manager: Address ##ARGS-WITH-TYPES##) {\n    prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n        acct.contracts.add(\n           name: name,\n           code: decoded,\n           ##ARGS-LIST##\n        )\n\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = getAccount(manager)\n                    .getCapability(linkPath)!\n                    .borrow<&FlowManager.Mapper>()!\n\n        let address = acct.address\n        contractManager.setAddress(name, address: address)\n    }\n}\n",D=function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(B,r,"deployContract =>"),a.replaceImportAddresses(B,r)})}catch(e){return Promise.reject(e)}},_=function({addressMap:e={},args:n=[],signers:r=[]}){try{return Promise.resolve(D(e)).then(function(e){return a.reportMissing("arguments",n.length,3,_),a.reportMissing("signers",r.length,1,_),E({code:e,args:n,signers:r})})}catch(e){return Promise.reject(e)}},$='\n  transaction ( code: String ) {\n    prepare( admin: AuthAccount) {\n        admin.contracts.add(\n           name: "FlowManager",\n           code: code.decodeHex(),\n        )\n   }\n}\n\n',q=function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports($,r,"initManager =>"),a.replaceImportAddresses($,r)})}catch(e){return Promise.reject(e)}},H=function({addressMap:e={},args:n=[],signers:r=[]}){try{return Promise.resolve(q(e)).then(function(e){return a.reportMissing("arguments",n.length,1,H),a.reportMissing("signers",r.length,1,H),E({code:e,args:n,signers:r})})}catch(e){return Promise.reject(e)}},L='\n  import FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport ExampleToken from 0xTOKENADDRESS\n\ntransaction(recipient: Address, amount: UFix64) {\n    let tokenAdmin: &ExampleToken.Administrator\n    let tokenReceiver: &{FungibleToken.Receiver}\n\n    prepare(signer: AuthAccount) {\n        self.tokenAdmin = signer\n        .borrow<&ExampleToken.Administrator>(from: /storage/exampleTokenAdmin)\n        ?? panic("Signer is not the token admin")\n\n        self.tokenReceiver = getAccount(recipient)\n        .getCapability(/public/exampleTokenReceiver)!\n        .borrow<&{FungibleToken.Receiver}>()\n        ?? panic("Unable to borrow receiver reference")\n    }\n\n    execute {\n        let minter <- self.tokenAdmin.createNewMinter(allowedAmount: amount)\n        let mintedVault <- minter.mintTokens(amount: amount)\n\n        self.tokenReceiver.deposit(from: <-mintedVault)\n\n        destroy minter\n    }\n}\n\n',O=function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(L,r,"mintTokens =>"),a.replaceImportAddresses(L,r)})}catch(e){return Promise.reject(e)}},V=function({addressMap:e={},args:n=[],signers:r=[]}){try{return Promise.resolve(O(e)).then(function(e){return a.reportMissing("arguments",n.length,2,V),a.reportMissing("signers",r.length,1,V),E({code:e,args:n,signers:r})})}catch(e){return Promise.reject(e)}},G="\n  import FlowManager from 0x01\n\ntransaction(name: String, address: Address) {\n    prepare(signer: AuthAccount){\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = signer\n                                .getCapability(linkPath)!\n                                .borrow<&FlowManager.Mapper>()!\n        contractManager.setAddress(name, address: address)\n    }\n}\n",K=function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(G,r,"registerContract =>"),a.replaceImportAddresses(G,r)})}catch(e){return Promise.reject(e)}},N=function({addressMap:e={},args:n=[],signers:r=[]}){try{return Promise.resolve(K(e)).then(function(e){return a.reportMissing("arguments",n.length,2,N),a.reportMissing("signers",r.length,1,N),E({code:e,args:n,signers:r})})}catch(e){return Promise.reject(e)}},z="\n  transaction{\n    prepare(acct: AuthAccount){\n        log(acct.address)\n    }\n}\n",U=function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(z,r,"scratch =>"),a.replaceImportAddresses(z,r)})}catch(e){return Promise.reject(e)}},Y=function({addressMap:e={},args:n=[],signers:r=[]}){try{return Promise.resolve(U(e)).then(function(e){return a.reportMissing("arguments",n.length,0,Y),a.reportMissing("signers",r.length,1,Y),E({code:e,args:n,signers:r})})}catch(e){return Promise.reject(e)}},W="\n  import FlowManager from 0x01\n\ntransaction(name:String, code: String, manager: Address ##ARGS-WITH-TYPES##) {\n    prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n\n        if acct.contracts.get(name: name) == nil {\n          acct.contracts.add(name: name, code: decoded)\n        } else {\n          acct.contracts.update__experimental(name: name, code: decoded)\n        }\n\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = getAccount(manager)\n                    .getCapability(linkPath)!\n                    .borrow<&FlowManager.Mapper>()!\n\n        let address = acct.address\n        contractManager.setAddress(name, address: address)\n    }\n}\n\n",J=function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(W,r,"updateContract =>"),a.replaceImportAddresses(W,r)})}catch(e){return Promise.reject(e)}},Q=function({addressMap:e={},args:n=[],signers:r=[]}){try{return Promise.resolve(J(e)).then(function(e){return a.reportMissing("arguments",n.length,3,Q),a.reportMissing("signers",r.length,1,Q),E({code:e,args:n,signers:r})})}catch(e){return Promise.reject(e)}};var X={createAccount:R,createAccountTemplate:C,deployContract:_,deployContractTemplate:D,initManager:H,initManagerTemplate:q,mintTokens:V,mintTokensTemplate:O,registerContract:N,registerContractTemplate:K,scratch:Y,scratchTemplate:U,updateContract:Q,updateContractTemplate:J};const{updateContractTemplate:Z,deployContractTemplate:ee}=X,ne=e=>Buffer.from(e,"utf8").toString("hex"),re=function(e){try{let n,r,t,o,s;if(T(e[0])){const[c]=e,{name:a,to:i,addressMap:u,args:l,update:d}=c;if(!a)throw Error("'name' field is missing");n=a,r=i,o=l,t=u,s=d}else[n,r,t,o,s]=e;return Promise.resolve(le()).then(function(e){const c={...ye,FlowManager:e,...t};return{name:n,to:r,args:o,update:s,addressMap:c}})}catch(e){return Promise.reject(e)}},te=function(e){try{function n(e){return Promise.resolve(le()).then(function(n){const r=ne(t),a={FlowManager:n};return Promise.resolve(c?Z(a):ee(a)).then(function(t){let c=[[o,r,p.String],[n,p.Address]];if(s){c=c.concat(s);let e=0;const n=[],r=s.reduce((r,t)=>[...r,...x(t,(r,t)=>{const o="abcdefghijklmnopqrstuvwxyz"[e];return e+=1,n.push(o),`${o}:${t.label}`})],[]);t=(t=t.replace("##ARGS-WITH-TYPES##",`, ${r}`)).replace("##ARGS-LIST##",n)}else t=(t=t.replace("##ARGS-WITH-TYPES##","")).replace("##ARGS-LIST##","");return E({code:t,args:c,signers:[e]})})})}const{to:r,code:t,name:o,args:s,update:c}=e;return Promise.resolve(r?n(r):Promise.resolve(le()).then(n))}catch(e){return Promise.reject(e)}},oe="\n  pub contract FlowManager {\n\n    pub event AccountAdded(address: Address)\n\n    pub struct Mapper {\n        pub let accounts: {String: Address}\n\n        pub fun getAddress(_ name: String): Address? {\n            return self.accounts[name]\n        }\n\n        pub fun setAddress(_ name: String, address: Address){\n            self.accounts[name] = address\n            emit FlowManager.AccountAdded(address: address)\n        }\n\n        init(){\n            self.accounts = {}\n        }\n    }\n\n    pub let accountManagerStorage: StoragePath\n    pub let contractManagerStorage: StoragePath\n    pub let accountManagerPath: PublicPath\n    pub let contractManagerPath: PublicPath\n\n    init(){\n        let accountManager = Mapper()\n        let contractManager = Mapper()\n\n        self.accountManagerStorage = /storage/testSuitAccountManager\n        self.contractManagerStorage = /storage/testSuitContractManager\n\n        self.accountManagerPath = /public/testSuitAccountManager\n        self.contractManagerPath = /public/testSuitContractManager\n        \n        // Destroy previously stored values\n        self.account.load<Mapper>(from: self.accountManagerStorage)\n        self.account.load<Mapper>(from: self.contractManagerStorage)\n\n        self.account.save(accountManager, to: self.accountManagerStorage)\n        self.account.save(contractManager, to: self.contractManagerStorage)\n\n        self.account.link<&Mapper>(self.accountManagerPath, target: self.accountManagerStorage)\n        self.account.link<&Mapper>(self.contractManagerPath, target: self.contractManagerStorage)\n    }\n}\n \n",se="\n  import FlowManager from 0x01\n\npub fun main(){\n    // the body can be empty. The script will throw error if FlowManager is not\n    // added to service address\n}\n\n",ce="\n  import FlowManager from 0x01\n\npub fun main(name: String, managerAccount: Address):Address? {\n    let manager = getAccount(managerAccount)\n    let linkPath = FlowManager.accountManagerPath\n    let accountManager = manager\n                        .getCapability(linkPath)\n                        .borrow<&FlowManager.Mapper>()!\n\n    return accountManager.getAddress(name)\n\n}\n",ae='\n  // This script reads the balance field of an account\'s FlowToken Balance\n\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport ExampleToken from 0xTOKENADDRESS\n\npub fun main(account: Address): UFix64 {\n    let acct = getAccount(account)\n    let vaultRef = acct.getCapability(/public/exampleTokenBalance)!.borrow<&ExampleToken.Vault{FungibleToken.Balance}>()\n        ?? panic("Could not borrow Balance reference to the Vault")\n\n    return vaultRef.balance\n}\n',ie="\n  import FlowManager from 0x01\n\npub fun main(name: String, managerAccount: Address):Address? {\n    let manager = getAccount(managerAccount)\n    let linkPath = FlowManager.contractManagerPath\n    let contractManager = manager\n                        .getCapability(linkPath)\n                        .borrow<&FlowManager.Mapper>()!\n\n    return contractManager.getAddress(name)\n\n}\n";var ue=X;const le=function(){try{return Promise.resolve(r.config().get("SERVICE_ADDRESS")).then(y)}catch(e){return Promise.reject(e)}},de=function(){try{return Promise.resolve(le()).then(function(e){return Promise.resolve(function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(se,r,"checkManager =>"),a.replaceImportAddresses(se,r)})}catch(e){return Promise.reject(e)}}({FlowManager:e})).then(function(e){const n=function(n,r){try{var t=Promise.resolve(F({code:e,service:!0})).then(function(){})}catch(e){return r()}return t&&t.then?t.then(void 0,r):t}(0,function(){return Promise.resolve(function(){try{return Promise.resolve(ue.initManagerTemplate()).then(function(e){return Promise.resolve(function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(oe,r,"FlowManager =>"),a.replaceImportAddresses(oe,r)})}catch(e){return Promise.reject(e)}}()).then(function(n){const r=ne(n);return Promise.resolve(E({code:e,args:[[r,p.String]],service:!0})).then(function(){})})})}catch(e){return Promise.reject(e)}}()).then(function(){})});return n&&n.then?n.then(function(){return le()}):le()})})}catch(e){return Promise.reject(e)}},ge=function(e,n=!1){try{if(n){const n=ye[e];if(void 0!==n)return Promise.resolve(n)}return Promise.resolve(de()).then(function(n){const r={FlowManager:n};let t;const o=function(o,s){try{var c=Promise.resolve(function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(ie,r,"getContractAddress =>"),a.replaceImportAddresses(ie,r)})}catch(e){return Promise.reject(e)}}(r)).then(function(r){return Promise.resolve(F({code:r,args:[[e,p.String],[n,p.Address]],service:!0})).then(function(e){t=e})})}catch(e){return s(e)}return c&&c.then?c.then(void 0,s):c}(0,function(e){console.error("failed to get account address:",e)});return o&&o.then?o.then(function(){return t}):t})}catch(e){return Promise.reject(e)}};function fe(e,n,r){if(!e.s){if(r instanceof pe){if(!r.s)return void(r.o=fe.bind(null,e,n));1&n&&(n=r.s),r=r.v}if(r&&r.then)return void r.then(fe.bind(null,e,n),fe.bind(null,e,2));e.s=n,e.v=r;const t=e.o;t&&t(e)}}const me=/(\s*import\s*)([\w\d]+)(\s+from\s*)([\w\d".\\/]+)/g,pe=function(){function e(){}return e.prototype.then=function(n,r){const t=new e,o=this.s;if(o){const e=1&o?n:r;if(e){try{fe(t,1,e(this.v))}catch(e){fe(t,2,e)}return t}return this}return this.o=function(e){try{const o=e.v;1&e.s?fe(t,1,n?n(o):o):r?fe(t,1,r(o)):fe(t,2,o)}catch(e){fe(t,2,e)}},t},e}(),he=e=>e.split(/\s/).map(e=>e.replace(/\s/g,"")).filter(e=>e.length>0&&"import"!==e&&"from"!==e),Pe=(e,n)=>{const[r,t]=n;return e[r]=t,e},ve=e=>e&&0!==e.length?e.split("\n").filter(e=>e.includes("import")).map(he).reduce(Pe,{}):{},Me=(e,n,r=!0)=>e.replace(me,(e,t,o,s,c)=>{const a=r?o:c;return`${t}${o} from ${n instanceof Function?n(a):n[a]}`}),Ae=function(e){try{const n={},r=function(e,r,t){var o=[];for(var s in e)o.push(s);return function(e,n,r){var t,o,s=-1;return function r(c){try{for(;++s<e.length;)if((c=n(s))&&c.then){if(!((a=c)instanceof pe&&1&a.s))return void c.then(r,o||(o=fe.bind(null,t=new pe,2)));c=c.v}t?fe(t,1,c):t=c}catch(e){fe(t||(t=new pe),2,e)}var a}(),t}(o,function(e){return function(e){const r=function(){if(!ye[e])return Promise.resolve(ge(e)).then(function(r){n[e]=r});n[e]=ye[e]}();if(r&&r.then)return r.then(function(){})}(o[e])})}(ve(e));return Promise.resolve(r&&r.then?r.then(function(){return n}):n)}catch(e){return Promise.reject(e)}},ye={FlowToken:"0x0ae53cb6e3f42a79",FungibleToken:"0xee82856bf20e2aa6",FlowFees:"0xe5a8b7f23e8b548f",FlowStorageFees:"0xf8d6e0586b0a20c7"},be={"0xe5a8b7f23e8b548f":"0xe5a8b7f23e8b548f","0xf8d6e0586b0a20c7":"0xf8d6e0586b0a20c7","0x0ae53cb6e3f42a79":"0x0ae53cb6e3f42a79","0xee82856bf20e2aa6":"0xee82856bf20e2aa6"},we=function(e,n="./transactions/"){try{return Promise.resolve(r.config().get("BASE_PATH")).then(function(r){return m.default.resolve(r,`${n}/${e}.cdc`)})}catch(e){return Promise.reject(e)}},Se=(e,n={},r=!1)=>{const t=(e=>f.default.readFileSync(e,"utf8"))(e);return n?Me(t,{...r?be:ye,...n}):t},Te=function({name:e,addressMap:n}){try{return Promise.resolve(we(e,"./contracts/")).then(function(e){return Se(e,n)})}catch(e){return Promise.reject(e)}},xe=function({name:e,addressMap:n}){try{return Promise.resolve(we(e,"./transactions/")).then(function(e){return Se(e,n)})}catch(e){return Promise.reject(e)}},je=function({name:e,addressMap:n}){try{return Promise.resolve(we(e,"./scripts/")).then(function(e){return Se(e,n)})}catch(e){return Promise.reject(e)}},ke={ExampleToken:ye.FlowToken},Ee=e=>e[0].toLowerCase()+e.slice(1);function Fe(e,n){try{var r=e()}catch(e){return n(e)}return r&&r.then?r.then(void 0,n):r}const{expect:Ie}=global,Ce=function(e){try{let r;function n(n){return r?n:Promise.resolve(e)}const t=function(){if("function"==typeof e)return r=1,Promise.resolve(e())}();return Promise.resolve(t&&t.then?t.then(n):n(t))}catch(e){return Promise.reject(e)}},{spawn:Re}=require("child_process");var Be=new class{constructor(){this.initialized=!1,this.logging=!0}setLogging(e){this.logging=e}log(e,n="log"){this.logging&&console[n](e)}start(e=8080,n=!1){try{const r=this;let t=e-8080+3569;return r.logging=n,r.process=Re("flow",["emulator","-v","--http-port",e,"--port",t]),Promise.resolve(new Promise((e,n)=>{r.process.stdout.on("data",n=>{r.log(`LOG: ${n}`),n.includes("Starting HTTP server")&&(r.log("EMULATOR IS UP! Listening for events!"),r.initialized=!0,e(!0))}),r.process.stderr.on("data",e=>{r.log(`ERROR: ${e}`,"error"),r.initialized=!1,n()}),r.process.on("close",n=>{r.log(`emulator exited with code ${n}`),r.initialized=!1,e(!0)})}))}catch(e){return Promise.reject(e)}}stop(){try{const e=this;return Promise.resolve(new Promise(n=>{e.process.kill(),setTimeout(()=>{e.initialized=!1,n(!0)},50)}))}catch(e){return Promise.reject(e)}}};e.deployContract=te,e.deployContractByName=function(){try{return Promise.resolve(re([].slice.call(arguments))).then(function(e){function n(e){return Promise.resolve(Te({name:t,addressMap:o})).then(function(n){return te({to:e,code:n,name:t,args:s,update:c})})}const{to:r,name:t,addressMap:o,args:s,update:c=!1}=e;return r?n(r):Promise.resolve(le()).then(n)})}catch(e){return Promise.reject(e)}},e.emulator=Be,e.executeScript=F,e.extractImports=ve,e.getAccountAddress=function(e){try{const n=e||`deployment-account-${(Math.random()*Math.pow(10,8)).toFixed(0)}`;return Promise.resolve(de()).then(function(e){function t(){const t=function(){if(null===s){const t=Fe(function(){return Promise.resolve(ue.createAccountTemplate(o)).then(function(t){return Promise.resolve(function(){try{const e=b.keyFromPrivate,n=Buffer,t=n.from;return Promise.resolve(r.config().get("PRIVATE_KEY")).then(function(r){const o=e.call(b,t.call(n,r,"hex")).getPublic("hex").replace(/^04/,"");return P.encode([Buffer.from(o,"hex"),2,3,1e3]).toString("hex")})}catch(e){return Promise.reject(e)}}()).then(function(r){return Promise.resolve(E({code:t,args:[[n,r,p.String],[e,p.Address]]})).then(function({events:e}){const n=e.find(e=>e.type.includes("AccountAdded"));s=n.data.address})})})},function(e){console.error(e)});if(t&&t.then)return t.then(function(){})}}();return t&&t.then?t.then(function(){return s}):s}const o={FlowManager:e};let s;const c=Fe(function(){return Promise.resolve(function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(ce,r,"getAccountAddress =>"),a.replaceImportAddresses(ce,r)})}catch(e){return Promise.reject(e)}}(o)).then(function(r){return Promise.resolve(F({code:r,args:[[n,p.String],[e,p.Address]],service:!0})).then(function(e){s=e})})},function(e){console.error("failed to get account address:",e)});return c&&c.then?c.then(t):t()})}catch(e){return Promise.reject(e)}},e.getConfigValue=function(e){try{return Promise.resolve(r.config().get(e))}catch(e){return Promise.reject(e)}},e.getContractAddress=ge,e.getContractCode=Te,e.getFlowBalance=function(e){try{return Promise.resolve(function(e){try{return Promise.resolve(function(e={}){try{return Promise.resolve(a.getEnvironment()).then(function(n){const r={...n,...e};return a.reportMissingImports(ae,r,"getBalance =>"),a.replaceImportAddresses(ae,r)})}catch(e){return Promise.reject(e)}}(ke)).then(function(n){return n.replace(/(ExampleToken)/gi,n=>"ExampleToken"===n?e:Ee(e))})}catch(e){return Promise.reject(e)}}("FlowToken")).then(function(n){const r=Me(n,ye);return F({code:r,args:[[e,p.Address]]})})}catch(e){return Promise.reject(e)}},e.getScriptCode=je,e.getServiceAddress=le,e.getTemplate=Se,e.getTransactionCode=xe,e.init=function(e,n={}){try{const{port:t=8080}=n,{pkey:o="48a1f554aeebf6bf9fe0d7b5b79d080700b073ee77909973ea0b2f6fbc902"}=n;return M("PRIVATE_KEY",process,"accounts/emulator-account/key",o),M("SERVICE_ADDRESS",process,"accounts/emulator-account/address","f8d6e0586b0a20c7"),r.config().put("accessNode.api",`http://localhost:${t}`),M("BASE_PATH",process,"resolve/basePath",e),Promise.resolve()}catch(e){return Promise.reject(e)}},e.mintFlow=function(e,n){try{return Promise.resolve(function(e){try{return Promise.resolve(ue.mintTokensTemplate(ke)).then(function(n){return n.replace(/(ExampleToken)/gi,n=>"ExampleToken"===n?e:Ee(e))})}catch(e){return Promise.reject(e)}}("FlowToken")).then(function(r){const t=Me(r,ye);return E({code:t,args:[[e,p.Address],[n,p.UFix64]]})})}catch(e){return Promise.reject(e)}},e.promise=Ce,e.replaceImportAddresses=Me,e.resolveImports=Ae,e.sendTransaction=E,e.set=M,e.shallPass=function(e){try{const n=Ce(e);return Promise.resolve(Ie(n).resolves.not.toBe(null)).then(function(){return Promise.resolve(Ie(n).resolves.not.toThrow()).then(function(){return n.then(({status:e,errorMessage:n})=>{Ie(e).toBe(4),Ie(n).toBe("")}),n})})}catch(e){return Promise.reject(e)}},e.shallResolve=function(e){try{const n=Ce(e);return Promise.resolve(Ie(n).resolves.not.toThrow()).then(function(){return n})}catch(e){return Promise.reject(e)}},e.shallRevert=function(e){try{const n=Ce(e);return Promise.resolve(Ie(n).rejects.not.toBe(null)).then(function(){})}catch(e){return Promise.reject(e)}},e.shallThrow=function(e){try{const n=Ce(e);return Promise.resolve(Ie(n).rejects.not.toBe(null)).then(function(){return Promise.resolve(Ie(n).rejects.toThrow()).then(function(){})})}catch(e){return Promise.reject(e)}}});
//# sourceMappingURL=index.umd.js.map
